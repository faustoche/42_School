

10. MateriaSource.hpp - Nouvelle classe

 CrÃ©er le fichier includes/MateriaSource.hpp
 Faire hÃ©riter de IMateriaSource
 Ajouter un attribut : tableau de 4 pointeurs AMateria (pour stocker les "modÃ¨les")
 DÃ©clarer constructeur, destructeur, constructeur de copie, opÃ©rateur d'assignation
 DÃ©clarer learnMateria() et createMateria()

11. MateriaSource.cpp - ImplÃ©mentation

 CrÃ©er le fichier src/MateriaSource.cpp
 ImplÃ©menter le constructeur (initialiser le tableau Ã  NULL)
 ImplÃ©menter le destructeur (delete tous les modÃ¨les stockÃ©s)
 ImplÃ©menter le constructeur de copie (copie profonde)
 ImplÃ©menter l'opÃ©rateur d'assignation (copie profonde)
 ImplÃ©menter learnMateria(AMateria* m) :

Trouver le premier emplacement libre (0-3)
Y stocker une copie (m->clone())
Si tableau plein, ne rien faire


 ImplÃ©menter createMateria(std::string const & type) :

Parcourir les modÃ¨les stockÃ©s
Si le type correspond, retourner une copie (clone())
Si type inconnu, retourner NULL





12. main.cpp - Programme de test

 CrÃ©er des instances d'Ice et Cure
 CrÃ©er une MateriaSource
 Faire apprendre des Materias Ã  la source
 CrÃ©er des Characters
 Ã‰quiper des Materias aux personnages
 Tester l'utilisation des Materias
 Tester le unequip sans fuite mÃ©moire
 Tester la copie profonde des Characters

13. Gestion mÃ©moire

 VÃ©rifier qu'il n'y a pas de fuites mÃ©moire avec valgrind
 S'assurer que toutes les Materias crÃ©Ã©es sont bien dÃ©truites
 GÃ©rer les Materias "unequip" (les stocker temporairement puis les delete)

14. Tests edge cases

 Tester equip sur inventaire plein
 Tester unequip/use avec index invalide
 Tester unequip/use sur emplacement vide
 Tester createMateria avec type inexistant
 Tester learnMateria sur source pleine


ğŸ“‹ ORDRE DE TRAVAIL RECOMMANDÃ‰

Corriger les erreurs critiques (Makefile, supprimer ICharacter.cpp)
ComplÃ©ter Ice et Cure (constructeurs, clone(), messages corrects)
ComplÃ©ter Character (hÃ©ritage, toutes les mÃ©thodes)
CrÃ©er MateriaSource (interface + implÃ©mentation)
Ã‰crire main.cpp pour tester
VÃ©rifier la gestion mÃ©moire